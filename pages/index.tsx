import type { NextPage, GetStaticProps } from 'next'
import React, { useState, ChangeEvent } from 'react'
import Head from 'next/head'
import axios from 'axios'

import UserName from '../src/UserName'

import Container from '@mui/material/Container'
import Typography from '@mui/material/Typography'
import LoadingButton from '@mui/lab/LoadingButton'
import Grid from '@mui/material/Grid'
import TextField from '@mui/material/TextField'
import Card from '@mui/material/Card'
import CardContent from '@mui/material/CardContent'

const Axios = axios.create({
  baseURL: 'https://versatileapi.herokuapp.com/api',
  headers: {
    Authorization: 'HelloWorld',
  },
})

export const getStaticProps: GetStaticProps = async (context) => {
  const { data: posts }: any = await Axios.get(
    '/text/all?$orderby=_created_at+desc&$limit=20',
  )
  return {
    props: {
      posts,
    },
  }
}

const Index: NextPage = ({ posts }: any) => {
  const [text, setText] = useState('')
  const handleChange = (event: ChangeEvent<HTMLInputElement>) => {
    setText(event.target.value)
  }
  const valueValid = (v: string) => v === '' || v.length >= 100

  const [loading, setLoading] = useState(false)
  const submit = () => {
    setLoading(true)
    Axios.post('/text', { text }).then(() => {
      alert('投稿しました')
      setText('')
      setLoading(false)
    })
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
      </Head>

      <Container maxWidth='lg' sx={{ my: 4 }}>
        <TextField
          label='つぶやきを書いてね'
          multiline
          fullWidth
          rows={5}
          value={text}
          onChange={handleChange}
          error={valueValid(text)}
          helperText={
            valueValid(text) ? '1文字以上100文字以下で入力してね' : ''
          }
        />

        <LoadingButton
          sx={{ my: 4 }}
          onClick={submit}
          loading={loading}
          variant='contained'
        >
          つぶやく
        </LoadingButton>

        <Grid container spacing={2}>
          {posts.map(({ id, _created_at, text, _user_id }: any) => {
            return (
              <Grid item xs={12} key={id}>
                <Card>
                  <CardContent>
                    <Typography sx={{ mb: 1 }}>
                      <UserName id={_user_id} />
                    </Typography>
                    <Typography variant='body2'>{text}</Typography>
                    <Typography sx={{ mt: 2.5 }} color='text.secondary'>
                      {new Date(_created_at).toDateString()}
                    </Typography>
                  </CardContent>
                </Card>
              </Grid>
            )
          })}
        </Grid>
      </Container>
    </>
  )
}

export default Index
